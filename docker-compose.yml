services:
  ps-ss14-watchdog:
    build: .
    container_name: ${WATCHDOG_CONTAINER_NAME}
    hostname: ${WATCHDOG_HOSTNAME}
    volumes:
      - ${WATCHDOG_INSTANCES_PATH}:/app/instances
      - ${WATCHDOG_APPSETTINGS_PATH}:/app/appsettings.yml:ro
    ports:
      - "${API_PORT}:${API_PORT}/tcp"
      - "${API_PORT}:${API_PORT}/udp"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    restart: unless-stopped
    networks:
      - internal
      - external
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${WATCHDOG_CONTAINER_NAME}.tls.certresolver=${TRAEFIK_CERT_RESOLVER}"
      - "traefik.http.routers.${WATCHDOG_CONTAINER_NAME}.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${WATCHDOG_CONTAINER_NAME}.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.routers.${WATCHDOG_CONTAINER_NAME}.tls=true"
      - "traefik.http.routers.${WATCHDOG_CONTAINER_NAME}.middlewares=${TRAEFIK_MIDDLEWARE}"
      - "traefik.http.services.${WATCHDOG_CONTAINER_NAME}.loadbalancer.server.port=${PORT}"
      - "traefik.docker.network=${EXTERNAL_NETWORK}"

networks:
  internal:
    driver: bridge
    name: ${INTERNAL_NETWORK}
  external:
    external: true
    name: ${EXTERNAL_NETWORK}

